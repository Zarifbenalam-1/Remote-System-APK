# =============================================================================
# ENTERPRISE REMOTE DEVICE MANAGEMENT SERVER - ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and update the values for your deployment
#
# SECURITY WARNING: Never commit .env file to version control!
# Add .env to your .gitignore file
# =============================================================================

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Environment mode (development, staging, production)
NODE_ENV=production

# Server port (default: 3000)
PORT=3000

# Number of cluster worker processes
# Options: "auto" (CPU cores), number (e.g., "4"), "1" (disable clustering)
CLUSTER_WORKERS=auto

# Maximum file upload size in bytes (default: 50MB)
FILE_UPLOAD_SIZE_LIMIT=52428800

# Maximum number of connected devices
MAX_DEVICES=1000

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Secret Key - MUST BE CHANGED IN PRODUCTION!
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your-super-secure-secret-key-change-this-in-production

# JWT Token expiration time
# Examples: "1h", "7d", "30d", "1y"
JWT_EXPIRES_IN=7d

# Rate limiting configuration
RATE_LIMIT_WINDOW_MS=900000      # 15 minutes in milliseconds
RATE_LIMIT_MAX_REQUESTS=100      # Max requests per window per IP

# CORS configuration
# Examples: "*", "https://yourdomain.com", "https://app1.com,https://app2.com"
CORS_ORIGIN=*

# =============================================================================
# REDIS CONFIGURATION (Required for clustering and queuing)
# =============================================================================

# Redis connection URL
# Examples:
# - Local: redis://localhost:6379
# - Remote: redis://username:password@hostname:port/database
# - SSL: rediss://username:password@hostname:port/database
REDIS_URL=redis://localhost:6379

# Redis password (if required)
REDIS_PASSWORD=

# Redis database number (0-15)
REDIS_DB=0

# Redis connection pool settings
REDIS_MAX_CONNECTIONS=10
REDIS_MIN_CONNECTIONS=2

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable/disable multi-process clustering
ENABLE_CLUSTERING=true

# Enable/disable rate limiting middleware
ENABLE_RATE_LIMITING=true

# Enable/disable Prometheus metrics collection
ENABLE_METRICS=true

# Enable/disable circuit breaker pattern
ENABLE_CIRCUIT_BREAKER=true

# Enable/disable advanced structured logging
ENABLE_ADVANCED_LOGGING=true

# Enable/disable health check endpoints
ENABLE_HEALTH_CHECKS=true

# Enable/disable request/response compression
ENABLE_COMPRESSION=true

# Enable/disable request logging middleware
ENABLE_REQUEST_LOGGING=true

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Logging configuration
LOG_LEVEL=info                   # Options: error, warn, info, debug, trace
LOG_FORMAT=json                  # Options: json, simple, colorized

# Metrics server port (separate from main server)
METRICS_PORT=9090

# Health check intervals (in milliseconds)
HEALTH_CHECK_INTERVAL=30000      # 30 seconds
HEALTH_CHECK_TIMEOUT=5000        # 5 seconds

# Circuit breaker thresholds
CIRCUIT_BREAKER_FAILURE_THRESHOLD=5      # Failures before opening
CIRCUIT_BREAKER_TIMEOUT=60000            # Timeout before retry (ms)
CIRCUIT_BREAKER_RESET_TIMEOUT=30000      # Reset timeout (ms)

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Socket.IO configuration
SOCKET_IO_PING_TIMEOUT=60000     # Client ping timeout (ms)
SOCKET_IO_PING_INTERVAL=25000    # Server ping interval (ms)
SOCKET_IO_MAX_CONNECTIONS=1000   # Max concurrent connections

# Request timeout settings
REQUEST_TIMEOUT=30000            # API request timeout (ms)
UPLOAD_TIMEOUT=300000            # File upload timeout (ms)

# Memory limits
MAX_MEMORY_USAGE=512             # Maximum memory usage in MB

# =============================================================================
# EXTERNAL SERVICES (Optional)
# =============================================================================

# Database configuration (if needed for persistent storage)
# DATABASE_URL=postgresql://username:password@hostname:port/database

# Email service configuration (for notifications)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-password

# Push notification services
# FCM_SERVER_KEY=your-firebase-server-key
# APNS_KEY_ID=your-apple-key-id
# APNS_TEAM_ID=your-apple-team-id

# =============================================================================
# DEVELOPMENT SETTINGS (Only for development environment)
# =============================================================================

# Enable/disable development features
DEBUG_MODE=false
DEVELOPMENT_CORS=false
MOCK_REDIS=false

# Development database (if different from production)
# DEV_DATABASE_URL=postgresql://dev:dev@localhost:5432/remote_device_dev

# =============================================================================
# DOCKER & DEPLOYMENT SETTINGS
# =============================================================================

# Container registry settings
# DOCKER_REGISTRY=your-registry.com
# DOCKER_IMAGE_TAG=latest

# Kubernetes settings
# K8S_NAMESPACE=production
# K8S_SERVICE_ACCOUNT=remote-device-server

# Load balancer settings
# LB_HEALTH_CHECK_PATH=/health
# LB_READINESS_CHECK_PATH=/ready

# =============================================================================
# SECURITY HEADERS & COMPLIANCE
# =============================================================================

# Security headers configuration
ENABLE_HELMET=true
ENABLE_CSRF_PROTECTION=false    # Disable for API-only servers
ENABLE_RATE_LIMIT_HEADERS=true

# Content Security Policy (if serving web content)
# CSP_POLICY="default-src 'self'"

# =============================================================================
# BACKUP & DISASTER RECOVERY
# =============================================================================

# Backup settings (if applicable)
# BACKUP_SCHEDULE="0 2 * * *"    # Daily at 2 AM
# BACKUP_RETENTION_DAYS=30
# BACKUP_S3_BUCKET=your-backup-bucket

# =============================================================================
# ANALYTICS & TELEMETRY
# =============================================================================

# Application performance monitoring
# APM_SERVICE_NAME=remote-device-server
# APM_SERVICE_VERSION=1.0.0
# APM_ENVIRONMENT=production

# Analytics configuration
# ANALYTICS_ENABLED=true
# ANALYTICS_ENDPOINT=https://analytics.yourdomain.com

# =============================================================================
# EXAMPLE PRODUCTION VALUES
# =============================================================================
# Below are example values for a production deployment.
# Uncomment and modify as needed:

# NODE_ENV=production
# PORT=3000
# CLUSTER_WORKERS=4
# JWT_SECRET=a1b2c3d4e5f6789abcdef1234567890fedcba9876543210abcdef1234567890
# REDIS_URL=redis://redis-cluster.production.internal:6379
# REDIS_PASSWORD=super-secure-redis-password
# LOG_LEVEL=warn
# RATE_LIMIT_MAX_REQUESTS=200
# ENABLE_CLUSTERING=true
# ENABLE_METRICS=true
# CORS_ORIGIN=https://yourdomain.com,https://app.yourdomain.com
